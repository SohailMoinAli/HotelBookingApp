@model HotelBookingApp.Models.BookingViewModel

@{
    ViewData["Title"] = "Check Room Availability";
}

<h2>@ViewData["Title"]</h2>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

<form id="availabilityForm" asp-action="CheckAvailability" method="post">
    <div class="form-group">
        <label asp-for="CheckInDate">Check-In Date</label>
        <input id="CheckInDate" asp-for="CheckInDate" class="form-control" type="date" required />
        <span asp-validation-for="CheckInDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CheckOutDate">Check-Out Date</label>
        <input id="CheckOutDate" asp-for="CheckOutDate" class="form-control" type="date" required />
        <span asp-validation-for="CheckOutDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="NumberOfGuests">Number of Guests</label>
        <input asp-for="NumberOfGuests" class="form-control" type="number" required min="1" />
        <span asp-validation-for="NumberOfGuests" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Check Availability</button>
</form>

@section Scripts {
    <script>
        document.getElementById('availabilityForm').onsubmit = function () {
            var checkInDate = new Date(document.getElementById('CheckInDate').value);
            var checkOutDate = new Date(document.getElementById('CheckOutDate').value);

            if (checkOutDate <= checkInDate) {
                alert('Check-out date must be after check-in date.');
                return false;
            }

            var today = new Date();
            if (checkInDate < today || checkOutDate < today) {
                alert('Dates before today cannot be selected.');
                return false;
            }

            return true;
        };
    </script>
}
